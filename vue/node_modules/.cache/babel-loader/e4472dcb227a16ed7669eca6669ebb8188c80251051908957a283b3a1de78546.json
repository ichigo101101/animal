{"ast":null,"code":"export default {\n  name: \"GoodsUser\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 12,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.fromVisible = true;\n    },\n    buy() {\n      let data = {\n        userId: this.user.id,\n        goodsId: this.form.id,\n        username: this.form.username,\n        phone: this.form.phone,\n        address: this.form.address,\n        num: this.form.tmpNum,\n        status: '待发货',\n        price: parseFloat(this.form.tmpNum) * parseFloat(this.form.price)\n      };\n      this.$request.post('/orders/add', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('购买成功');\n          this.fromVisible = false;\n          this.load(1);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","created","load","methods","handleEdit","row","stringify","buy","userId","id","goodsId","username","phone","address","num","tmpNum","status","price","parseFloat","$request","post","then","res","code","$message","success","error","msg","save","$refs","formRef","validate","valid","url","method","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/GoodsUser.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"search\">\r\n            <el-input placeholder=\"请输入商品名称\" style=\"width: 200px\" v-model=\"name\"></el-input>\r\n            <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n            <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n\r\n        <div class=\"table\">\r\n            <div style=\"padding: 10px 15px\">\r\n                <el-row>\r\n                    <el-col :span=\"6\" v-for=\"item in tableData\" style=\"margin-bottom: 20px\">\r\n                        <div style=\"display: flex\">\r\n                            <div style=\"flex: 1; padding-right: 5px\">\r\n                                <img :src=\"item.img\" alt=\"\" style=\"width: 100%; height: 155px; border-radius: 10px; border: 1px solid #cccccc\">\r\n                            </div>\r\n                            <div style=\"flex: 1; padding-left: 5px\">\r\n                                <div style=\"font-size: 15px; font-weight: 550; color: #817a70\">{{ item.name }}</div>\r\n                                <div style=\"margin-top: 5px; font-weight: 600; font-size: 20px; color: red\">￥ {{ item.price }}</div>\r\n                                <div style=\"margin-top: 5px; font-size: 13px; color: #4b4949\">剩余数量：{{ item.num }}</div>\r\n                                <div style=\"margin-top: 10px\">\r\n                                    <el-input-number v-model=\"item.tmpNum\" :min=\"1\" :max=\"item.num\" size=\"mini\"></el-input-number>\r\n                                </div>\r\n                                <div style=\"margin-top: 15px\">\r\n                                    <el-button type=\"warning\" size=\"mini\" :disabled=\"item.num === 0\" @click=\"handleEdit(item)\">购买</el-button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n            </div>\r\n            <div class=\"pagination\">\r\n                <el-pagination\r\n                        background\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page=\"pageNum\"\r\n                        :page-sizes=\"[5, 10, 20]\"\r\n                        :page-size=\"pageSize\"\r\n                        layout=\"total, prev, pager, next\"\r\n                        :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n\r\n        <el-dialog title=\"收货信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n            <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n                <el-form-item prop=\"username\" label=\"收获人\">\r\n                    <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"phone\" label=\"联系方式\">\r\n                    <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"address\" label=\"收获地址\">\r\n                    <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"buy\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"GoodsUser\",\r\n        data() {\r\n            return {\r\n                tableData: [],  // 所有的数据\r\n                pageNum: 1,   // 当前的页码\r\n                pageSize: 12,  // 每页显示的个数\r\n                total: 0,\r\n                name: null,\r\n                fromVisible: false,\r\n                form: {},\r\n                user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n                rules: {\r\n                },\r\n                ids: []\r\n            }\r\n        },\r\n        created() {\r\n            this.load(1)\r\n        },\r\n        methods: {\r\n            handleEdit(row) {\r\n                this.form = JSON.parse(JSON.stringify(row))\r\n                this.fromVisible = true\r\n            },\r\n\r\n            buy() {\r\n                let data = {\r\n                    userId: this.user.id,\r\n                    goodsId: this.form.id,\r\n                    username: this.form.username,\r\n                    phone: this.form.phone,\r\n                    address: this.form.address,\r\n                    num: this.form.tmpNum,\r\n                    status: '待发货',\r\n                    price: parseFloat(this.form.tmpNum) * parseFloat(this.form.price)\r\n                }\r\n                this.$request.post('/orders/add', data).then(res => {\r\n                    if (res.code === '200') {\r\n                        this.$message.success('购买成功')\r\n                        this.fromVisible = false\r\n                        this.load(1)\r\n                    } else {\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n            },\r\n            save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n                this.$refs.formRef.validate((valid) => {\r\n                    if (valid) {\r\n                        this.$request({\r\n                            url: this.form.id ? '/goods/update' : '/goods/add',\r\n                            method: this.form.id ? 'PUT' : 'POST',\r\n                            data: this.form\r\n                        }).then(res => {\r\n                            if (res.code === '200') {  // 表示成功保存\r\n                                this.$message.success('保存成功')\r\n                                this.load(1)\r\n                                this.fromVisible = false\r\n                            } else {\r\n                                this.$message.error(res.msg)  // 弹出错误的信息\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            load(pageNum) {  // 分页查询\r\n                if (pageNum) this.pageNum = pageNum\r\n                this.$request.get('/goods/selectPage', {\r\n                    params: {\r\n                        pageNum: this.pageNum,\r\n                        pageSize: this.pageSize,\r\n                        name: this.name,\r\n                    }\r\n                }).then(res => {\r\n                    this.tableData = res.data?.list\r\n                    this.total = res.data?.total\r\n                })\r\n            },\r\n            reset() {\r\n                this.name = null\r\n                this.load(1)\r\n            },\r\n            handleCurrentChange(pageNum) {\r\n                this.load(pageNum)\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAkEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAL,IAAA;MACAM,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA,GACA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,WAAAC,GAAA;MACA,KAAAZ,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAW,SAAA,CAAAD,GAAA;MACA,KAAAb,WAAA;IACA;IAEAe,IAAA;MACA,IAAApB,IAAA;QACAqB,MAAA,OAAAd,IAAA,CAAAe,EAAA;QACAC,OAAA,OAAAjB,IAAA,CAAAgB,EAAA;QACAE,QAAA,OAAAlB,IAAA,CAAAkB,QAAA;QACAC,KAAA,OAAAnB,IAAA,CAAAmB,KAAA;QACAC,OAAA,OAAApB,IAAA,CAAAoB,OAAA;QACAC,GAAA,OAAArB,IAAA,CAAAsB,MAAA;QACAC,MAAA;QACAC,KAAA,EAAAC,UAAA,MAAAzB,IAAA,CAAAsB,MAAA,IAAAG,UAAA,MAAAzB,IAAA,CAAAwB,KAAA;MACA;MACA,KAAAE,QAAA,CAAAC,IAAA,gBAAAjC,IAAA,EAAAkC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA,KAAAjC,WAAA;UACA,KAAAU,IAAA;QACA;UACA,KAAAsB,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IACAC,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAb,QAAA;YACAc,GAAA,OAAAxC,IAAA,CAAAgB,EAAA;YACAyB,MAAA,OAAAzC,IAAA,CAAAgB,EAAA;YACAtB,IAAA,OAAAM;UACA,GAAA4B,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAvB,IAAA;cACA,KAAAV,WAAA;YACA;cACA,KAAAgC,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;;IACAzB,KAAAb,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAA8B,QAAA,CAAAgB,GAAA;QACAC,MAAA;UACA/C,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAJ,IAAA,OAAAA;QACA;MACA,GAAAmC,IAAA,CAAAC,GAAA;QACA,KAAAlC,SAAA,GAAAkC,GAAA,CAAAnC,IAAA,EAAAkD,IAAA;QACA,KAAA9C,KAAA,GAAA+B,GAAA,CAAAnC,IAAA,EAAAI,KAAA;MACA;IACA;IACA+C,MAAA;MACA,KAAApD,IAAA;MACA,KAAAgB,IAAA;IACA;IACAqC,oBAAAlD,OAAA;MACA,KAAAa,IAAA,CAAAb,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}